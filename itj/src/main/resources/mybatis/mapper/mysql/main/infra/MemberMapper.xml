<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itjfw.infra.member.MemberDao">

<resultMap id="resultMapObj" type="com.itjfw.infra.member.MemberDto"></resultMap>

<!-- member Mapper 공통 구문 -->
<!-- select 공통 구문 SQL -->
	<sql id ="selectCommon">
		from
			member
		where 1=1
			and memberDelNy = 0
			<if test="shDelNy != null and !shDelNy.equals('')">AND memberDelNy = #{shDelNy}</if>
			
 			<choose>
				<when test="shOptionDate == 1">AND memberRegDate BETWEEN #{shDateStart} AND #{shDateEnd}</when>
				<when test="shOptionDate == 2">AND memberModDate BETWEEN #{shDateStart} AND #{shDateEnd}</when>
			</choose>
			
 			<choose> 
	            <when test="shOption == 1">AND memberSeq = #{shValue}</when>
	            <when test="shOption == 2">AND memberName = #{shValue}</when>	       
	            <when test="shOption == 3">AND memberID = #{shValue}</when>     
	           <when test="shOption == 4">AND memberTypeCd = #{shValue}</when>
       		</choose>
	</sql>
	
<select id="memberList" resultMap="resultMapObj">
<include refid="base.selectListUpperForMysql" />
	select
		memberSeq,
		memberID,
		memberPwd,
		memberName,
		memberGenderCd,
		memberTypeCd,
		memberAddr,
		memberDelNy,
		memberRegDate,
		memberModDate
		
<include refid="selectCommon" />
order by memberSeq
limit 99999999999
<include refid="base.selectListLowerForMysql" />
</select>


<select id="getTotalMemberCount" resultType="Integer">
select count(*)
<include refid="selectCommon"></include>
</select>

<!-- 멤버 정보 셀렉문 -->
<select id="selectMember" resultMap="resultMapObj">
select
	memberSeq,
	memberID,
	memberPwd,
	memberName,
	memberGenderCd,
	memberTypeCd,
	memberAddr,
	memberDelNy,
	memberRegDate,
	memberModDate
	
from
	member
	
where 1=1
and
	memberSeq=#{memberSeq}
</select>

<!--  Add Member -->
<insert id="memberInst">
insert into member (
	memberID,
	memberPwd,
	memberName,
	memberGenderCd,
	memberTypeCd,
	memberAddr,
	memberDelNy,
	memberRegDate,
	memberModDate
) values (
	#{memberID},
	#{memberPwd}.
	#{memberName},
	#{memberGenderCd},
	#{memberTypeCd},
	#{memberAddr},
	#{memberDelNy},
	now(),
	now()
);
</insert>

<!-- 멤버 정보 수정 -->
<update id="memberUpdt">
update member
set
	memberID=#{memberID},
	memberPwd=#{memberPwd},
	memberName=#{memberName},
	memberGenderCd=#{memberGenderCd},
	memberTypeCd=#{memberTypeCd},
	memberAddr=#{memberAddr},
	memberDelNy=#{memberDelNy},
	memberRegDate=now(),
	memberModDate=now()
	
where 1=1
	and memberSeq=#{memberSeq}
</update>

<!-- 멤버 삭제 / Uelete -->
<update id="memberUlt">
update member
set
	memberDelNy=1
where 1=1
and
	memberSeq=#{memberSeq}
</update>

<!-- 멤버 삭제 / 아예 삭제 -->
<delete id="memberDel">
delete from member
where 1=1
and
	memberSeq=#{memberSeq}
</delete>
	


</mapper>